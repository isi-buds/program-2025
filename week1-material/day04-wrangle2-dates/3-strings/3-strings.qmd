---
title: "Strings <br>"
execute:
  echo: true
subtitle: "ISI-BUDS 2025"
embed-resources: true
format: 
  revealjs:
    slide-number: true
    incremental: true
    #theme: ["../slide-style.scss"]
    title-slide-attributes: 
      data-background-size: 12%
      data-background-position: 50% 75%
---



```{r}
#| echo: false
library(tidyverse)
library(janitor)
options(scipen = 999)
```

# Working with Strings

##

```{r echo = FALSE, fig.align='center', out.width="40%"}

knitr::include_graphics("img/stringr-logo.png")
```


```{r}
library(stringr)
```


##

[Friends](https://www.imdb.com/title/tt0108778)



```{r eval = TRUE, message=FALSE}
friends <- read_csv("../data/friends.csv")
```
 
```{r}
glimpse(friends)
```

##

```{r}
friends$description
```

##

```{r}
friends$description[1]
```

. . .

```{r}
first_episode_desc <- friends$description[1]
```


##

```{r eval=FALSE}
str_something(some_character_vector, ....)
```



## `str_length()`


```{r}
str_length(first_episode_desc)
```

`str_length()` returns the length of string.

##

Which episode has the longest description?

```{r}
str_length(friends$description)
```

##

Which episode has the longest description?

```{r}
max(str_length(friends$description))
```

##

Which episode has the longest description?

```{r}
friends |> 
  filter(str_length(description) == max(str_length(description)))
```


##

Which episode has the longest description?

```{r}
friends |> 
  filter(str_length(description) == max(str_length(description))) |> 
  select(description) |> 
  pull() |> 
  str_length()
```



## `str_sub()`

##

```{r}
first_episode_desc
```

. . .

```{r}
# 2nd to 8th character
str_sub(first_episode_desc, 2, 8)
```

. . .

```{r}
# 4th to fifth-to-last character 
str_sub(first_episode_desc, 4, -5)
```




## `str_to_lower()` and `str_to_upper()`

```{r}
str_to_lower(first_episode_desc)
```

. . .

```{r}
str_to_upper(first_episode_desc)
```


##

Change all the titles to capital letters.

```{r}
friends |> 
  mutate(title = str_to_upper(title))
```


## `str_detect()`



```{r}
str_detect(first_episode_desc, "Rachel")
```

. . .

```{r}
str_detect(first_episode_desc, "Ross")
```


##

How many episodes have "Phoebe" in the description?

```{r}
str_detect(friends$description, "Phoebe") 
```

##

```{r}
str_detect(friends$description, "Phoebe") |> 
  sum()
```



## `str_split()`

```{r}
str_split(first_episode_desc, boundary("word"))
```

##

```{r}
str_split(first_episode_desc, boundary("character"))
```



## `str_replace()`



```{r}
str_replace(first_episode_desc, "Monica", "Monika")
```


##

[stringr cheatsheet](https://evoldyn.gitlab.io/evomics-2018/ref-sheets/R_strings.pdf)